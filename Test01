//Q1. What are entry conrol loops and exit control loops?

/*ANS
1../entry control loop = conditon check before the loop body

  
i =6
while(i<10){
    console.log(i)
    i++
}







2../exit conrol loop = codniton check after the loop body 
i =6
do{console.log(i);
    i++


}while(i<10)
 */


/*
Q5./////////////////////////////////////////////////// 


* * * * * 
   * * * * 
      * * *
         * * 
            *
ANS

nst =5
nsp =1 
for(let row= 1 ; row<=5;row++){
    

    for(let sp=1; sp<=nsp;sp++){
        process.stdout.write(" ")
    }
    for(let st=1; st<=nst;st++){
        process.stdout.write("*")
    }
    console.log()

    nsp = nsp +2
    nst = nst-1
}

////////////////////////////////
//Q6.  Write a js Program for finding Prime Numbers between 1-100. 



//ANS

for(let num=2 ; num<=100;num++){

    let isPrime = true


for(let i=2 ; i<=Math.sqrt(num);i++){
    if (num%i ===0){
         isPrime = false
    }
}
    if(isPrime){
        console.log(num)
    }

}

//////////////////////////////////
//q7. code for anybase to anybase number system conversion ?
// Function to convert from any base to decimal (base 10)
function anyBaseToDecimal(number, fromBase) {
    return parseInt(number, fromBase);  // Convert from 'fromBase' to decimal
}

// Function to convert from decimal (base 10) to any base
function decimalToAnyBase(decimalNumber, toBase) {
    return decimalNumber.toString(toBase);  // Convert from decimal to 'toBase'
}

// Main conversion logic
let number = "1011";  // The number as a string (important for non-decimal bases)
let fromBase = 16;    // Base of the input number
let toBase = 2;       // Base to convert to

// First, convert from the original base to decimal
let decimalValue = anyBaseToDecimal(number, fromBase);

// Then, convert from decimal to the desired base
let result = decimalToAnyBase(decimalValue, toBase);

console.log(`The number ${number} in base ${fromBase} is ${result} in base ${toBase}.`); 

let number =10101
let fromBase =2
let toBase =8
let a;
let b;
function anyabsetodecimal(number,fromBase){
 
    a= parseInt(number,fromBase)
}
function decimalToAnyBase(number,toBase){
 
    b= number.toString(toBase)
}
 anyabsetodecimal(number,fromBase)
 decimalToAnyBase(number,toBase)

 console.log(a)
 console.log(b) */
/////////////////////////////////////
question 8  code for any base addition?

Answer - function anybaseaddition(base ,num1,num2){
        let ans=0;
        let c=0;
        let pow=1;
        while(num1>0||num2>0||c>0){
            let num1ld=num1%10;
            let num2ld=num2%10;
            num1=Math.floor(num1/10);
            num2=Math.floor(num2/10);
            let d=num1ld+num2ld+c;
            c=Math.floor(d/base);
            d=d%base;
            ans+=d*pow;
            pow=pow*10;
    
    
        }
        return ans;
    }
    let sum=anybaseaddition(2,10,11)
    console.log(sum) */
